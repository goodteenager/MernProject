import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card.tsx';
import { Button } from '../components/ui/Button.tsx';
import { reportService } from '../services/reportService';
import { Report } from '../types/report';
import { formatDate } from '../lib/formatters';
import { useToast } from '../hooks/use-toast';
import { Plus, FileText, CalendarDays, BarChart2, RefreshCw } from 'lucide-react';

const Reports = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [reports, setReports] = useState<Report[]>([]);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState<string>('–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π');

  useEffect(() => {
    fetchReports();
  }, [activeTab]);

  const fetchReports = async () => {
    setLoading(true);
    try {
      const response = await reportService.getReports({
        reportType: activeTab,
        sort: '-date',
        limit: 20
      });
      setReports(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–æ–≤:', error);
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç—ã',
        variant: 'destructive',
      });
    } finally {
      setLoading(false);
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
  const getMoodEmoji = (mood: string) => {
    switch (mood) {
      case '–æ—Ç–ª–∏—á–Ω–æ': return 'üòÑ';
      case '—Ö–æ—Ä–æ—à–æ': return 'üôÇ';
      case '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ': return 'üòê';
      case '–ø–ª–æ—Ö–æ': return 'üòî';
      case '—É–∂–∞—Å–Ω–æ': return 'üò¢';
      default: return 'üòê';
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
  const getCardColor = (rating: number) => {
    if (rating >= 8) return 'border-l-green-500';
    if (rating >= 5) return 'border-l-blue-500';
    if (rating >= 3) return 'border-l-amber-500';
    return 'border-l-red-500';
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
  const getReportTypeIcon = (type: string) => {
    switch (type) {
      case '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π': return <CalendarDays className="h-5 w-5" />;
      case '–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π': return <BarChart2 className="h-5 w-5" />;
      case '–µ–∂–µ–º–µ—Å—è—á–Ω—ã–π': return <FileText className="h-5 w-5" />;
      default: return <CalendarDays className="h-5 w-5" />;
    }
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-3xl font-bold">–†–µ—Ñ–ª–µ–∫—Å–∏—è</h1>
        <div className="flex space-x-2">
          <Button variant="outline" onClick={fetchReports}>
            <RefreshCw className="h-4 w-4 mr-2" />
            –û–±–Ω–æ–≤–∏—Ç—å
          </Button>
          <Button onClick={() => navigate('/reports/create')}>
            <Plus className="h-4 w-4 mr-2" />
            –ù–æ–≤—ã–π –æ—Ç—á–µ—Ç
          </Button>
        </div>
      </div>

      {/* –¢–∞–±—ã –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –æ—Ç—á–µ—Ç–æ–≤ */}
      <div className="flex border-b">
        <button
          className={`py-2 px-4 font-medium ${activeTab === '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π' ? 'border-b-2 border-primary' : 'text-muted-foreground'}`}
          onClick={() => setActiveTab('–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π')}
        >
          –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ
        </button>
        <button
          className={`py-2 px-4 font-medium ${activeTab === '–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π' ? 'border-b-2 border-primary' : 'text-muted-foreground'}`}
          onClick={() => setActiveTab('–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π')}
        >
          –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ
        </button>
        <button
          className={`py-2 px-4 font-medium ${activeTab === '–µ–∂–µ–º–µ—Å—è—á–Ω—ã–π' ? 'border-b-2 border-primary' : 'text-muted-foreground'}`}
          onClick={() => setActiveTab('–µ–∂–µ–º–µ—Å—è—á–Ω—ã–π')}
        >
          –ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ
        </button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ */}
      {loading ? (
        <div className="flex justify-center py-8">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
        </div>
      ) : reports.length > 0 ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {reports.map((report) => (
            <Card 
              key={report._id} 
              className={`cursor-pointer border-l-4 ${getCardColor(report.rating)}`}
              onClick={() => navigate(`/reports/${report._id}`)}
            >
              <CardHeader className="pb-2">
                <div className="flex justify-between items-center">
                  <CardTitle className="text-lg">{formatDate(report.date)}</CardTitle>
                  <div className="flex items-center space-x-1 text-muted-foreground">
                    {getReportTypeIcon(report.reportType)}
                    <span className="text-xs capitalize">{report.reportType}</span>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 gap-4 mb-4">
                  <div className="text-center">
                    <p className="text-sm text-muted-foreground">–û—Ü–µ–Ω–∫–∞ –¥–Ω—è</p>
                    <p className="text-2xl font-bold">{report.rating}/10</p>
                  </div>
                  <div className="text-center">
                    <p className="text-sm text-muted-foreground">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</p>
                    <p className="text-2xl">{getMoodEmoji(report.mood)}</p>
                  </div>
                </div>

                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á:</span>
                    <span className="font-medium">{report.taskStats.completedCount}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span>–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:</span>
                    <span className="font-medium">{report.taskStats.failedCount}</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span>–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:</span>
                    <span className="font-medium">{report.overallProgress}%</span>
                  </div>
                </div>

                {report.nextPeriodGoals && report.nextPeriodGoals.length > 0 && (
                  <div className="mt-4">
                    <p className="text-sm font-medium mb-1">–¶–µ–ª–∏:</p>
                    <ul className="text-sm text-muted-foreground">
                      {report.nextPeriodGoals.slice(0, 2).map((goal, index) => (
                        <li key={index} className="truncate">‚Ä¢ {goal.title}</li>
                      ))}
                      {report.nextPeriodGoals.length > 2 && (
                        <li>‚Ä¢ ... –∏ –µ—â—ë {report.nextPeriodGoals.length - 2}</li>
                      )}
                    </ul>
                  </div>
                )}
              </CardContent>
            </Card>
          ))}
        </div>
      ) : (
        <div className="text-center py-12 space-y-4">
          <FileText className="h-12 w-12 text-muted-foreground mx-auto" />
          <h2 className="text-xl font-medium">–ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤</h2>
          <p className="text-muted-foreground">
            –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π {activeTab} –æ—Ç—á–µ—Ç –¥–ª—è —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
          </p>
          <Button onClick={() => navigate('/reports/create')}>
            <Plus className="h-4 w-4 mr-2" />
            –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç
          </Button>
        </div>
      )}
    </div>
  );
};

export default Reports; 